<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oo.businessplan.authority.mapper.AuthorityMapper">

     <resultMap id="AuthorityMap" type="authorityWithKey">
        <id property="id" column="id"/>
        <result property="roid" column="roid"/>
        <result property="reid" column="reid"/>
        <result property="type" column="type"/>
        <result property="key" column="key"/>
        <result property="resourceName" column="name"/>
        <result property="delflag" column="delflag"/>
    </resultMap>
    
    <resultMap id="AuthorityAndResourceMap" type="authorityWithKey">
        <id property="id" column="id"/>
        <result property="roid" column="roid"/>
        <result property="reid" column="reid"/>
        <result property="type" column="type"/>
        <result property="key" column="key"/>
        <result property="resourceName" column="name"/>
        <result property="rPid" column="rPid"/>
        <result property="rid" column="rid"/>
        <result property="delflag" column="delflag"/>
    </resultMap>

     <sql id="base_column">
        au.id,au.roid,au.reid,au.type,au.`level`,au.delflag
     </sql>
     
     <sql id="all_column">
         <include refid="base_column" />, re.key, re.name
     </sql>

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO authority
        (
            <trim suffixOverrides=",">
                <if test="id != null ">
                id,
                </if>
                <if test="roid != null ">
                roid,
                </if>
                <if test="reid != null ">
                reid,
                </if>
                <if test="type != null ">
                type,
                </if>
                <if test="delflag != null ">
                delflag,
                </if>
            </trim>
        )
        VALUES (
            <trim suffixOverrides=",">
                <if test="id != null ">
                #{id},
                </if>
                <if test="roid != null ">
                #{roid},
                </if>
                <if test="reid != null ">
                #{reid},
                </if>
                <if test="type != null ">
                #{type},
                </if>
                <if test="delflag != null ">
                #{delflag,jdbcType=TINYINT},
                </if>
            </trim>
        )
    </insert>
    
    <insert id="insertOrUpdate" parameterType="authority">
        INSERT INTO authority (id, roid, reid, type, level, delflag)
        VALUES 
        <foreach collection="list" item="l" separator=",">
        (#{l.id}, #{l.roid}, #{l.reid}, #{l.type, jdbcType=TINYINT}, #{l.level, jdbcType=TINYINT}, #{l.delflag, jdbcType=TINYINT})
        </foreach>
        ON DUPLICATE KEY UPDATE type = VALUES(type), level = VALUES(level), delflag = VALUES(delflag)
    </insert>

    <update id="delete" >
        UPDATE authority set delflag = #{delflag}
         WHERE id = #{ key })
    </update>
    
    <update id="update" parameterType="authority">
        UPDATE authority SET 
        <trim>
           <if test="type != null">
           type = #{type}
           </if>
        </trim>
         WHERE id = #{id}
    </update>

    <select id="getById" resultType="authority" parameterType="authority">
        SELECT 
        <include refid="base_column"/>
        FROM authority au
        WHERE au.id = #{id} AND au.delflag = #{delflag}
    </select>

    <select id="getList" resultMap="AuthorityMap" parameterType="authority">
        SELECT 
        <include refid="all_column"/>
        FROM authority au
        LEFT JOIN resource re ON au.rid = re.id
        WHERE 
    <trim>
        <if test="id != null ">
        AND au.`id` = #{id}
        </if>
        <if test="roid != null ">
        AND au.`roid` = #{roid}
        </if>
        <if test="reid != null ">
        AND au.`reid` = #{reid}
        </if>
        <if test="key != null ">
        AND re.`key` = #{key}
        </if>
        <if test=" != null ">
        AND au.`delflag` = #{delflag,jdbcType=TINYINT}
        </if>
    </trim>
    </select>

    <select id="getByStr" resultType="authority" parameterType="authority">
        SELECT 
        <include refid="base_column"/>
        FROM authority au
        WHERE au.`id` = #{key} AND au.`delflag` = #{delflag,jdbcType=TINYINT} 
    </select>

    <select id="getListByStr" resultMap="AuthorityMap" >
        SELECT 
           <include refid="all_column"/>
        FROM 
            admin ad
        LEFT JOIN
            admin_role ad_ro ON ad.id=ad_ro.aid
        LEFT JOIN
            role ro ON ro.id = ad_ro.rid
        LEFT JOIN
            authority au ON au.roid = ro.id
        LEFT JOIN
            resource re ON re.id = au.reid
        WHERE 
            ad.`accountname` = #{key} 
        AND ad.`delflag` = #{delflag,jdbcType=TINYINT}
        AND ad_ro.`delflag` = #{delflag,jdbcType=TINYINT}
        AND ro.`delflag` = #{delflag,jdbcType=TINYINT}
        AND ro.`state` = IFNULL(#{state,jdbcType=TINYINT},1)
        AND au.`delflag` = #{delflag,jdbcType=TINYINT} 
    </select>
    
    <select id="getAuthorities" parameterType="map" resultType="authority">
        <include refid="getAuthorities_SQL" />
    </select>
    
    <sql id="getAuthorities_SQL">
        SELECT
        <include refid="base_column" />
        FROM
          authority au 
        <where>
        <if test="roId != null">
          au.roid = #{roId,jdbcType=INTEGER}
        </if>
        <if test="reIds != null">
          au.reid IN 
          <foreach collection="reIds" item="item" open="(" close=")" separator=",">
            #{item}
          </foreach>
        </if>
        <if test="delflag != null">
          au.delflag = #{delflag, jdbcType=TINYINT}
        </if>
        </where>
    </sql>
    
    <select id="getAuthorityByRole" resultMap="AuthorityMap">
        SELECT
            <include refid="all_column"/>
        FROM
           role ro
        LEFT JOIN
           authority au ON ro.id = au.roid
        LEFT JOIN
           resource re ON au.reid = re.id
        WHERE
           ro.id = #{roleId}
        AND
           au.delflag = #{delflag, jdbcType=TINYINT}
        AND
           re.delflag = #{delflag, jdbcType=TINYINT}
    </select>
    
    <select id="getAuthoritiesByAdminIdAndType" resultType="authority">
        SELECT
            DISTINCT <include refid="base_column"/>
        FROM
           admin ad 
        LEFT JOIN
           admin_role ar ON ad.id = ar.aid
        LEFT JOIN
           role ro ON ar.rid = ro.id
        LEFT JOIN
           authority au ON ro.id = au.roid
        WHERE
            ad.id = #{adminId}
        AND ar.delflag = #{delflag, jdbcType=TINYINT}
        AND ro.delflag = #{delflag, jdbcType=TINYINT}
        AND ro.state = #{state, jdbcType=TINYINT}
        AND au.delflag = #{delflag, jdbcType=TINYINT}
        <if test="type != null">
        AND au.type = #{type, jdbcType=TINYINT}
        </if>
    </select>

</mapper>