<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oo.businessplan.target.mapper.PlanActionMapper">

     <resultMap id="PlanActionMap" type="planAction">
        <id property="id" column="id"/>
        <result property="startTime" column="startTime"/>
        <result property="endTime" column="endTime"/>
        <result property="consumeTime" column="consumeTime"/>
        <result property="overTime" column="overTime"/>
        <result property="result" column="result"/>
        <result property="reason" column="reason"/>
        <result property="targetPlanId" column="targetPlanId"/>
        <result property="num" column="num"/>
        <result property="actionDate" column="actionDate"/>
        <result property="expectStartTime" column="expectStartTime"/>
        <result property="expectEndTime" column="expectEndTime"/>
    </resultMap>

     <sql id="base_column">
        pl.id,pl.startTime,pl.endTime,pl.consumeTime,pl.overTime,pl.result,pl.reason,pl.targetPlanId,pl.num,pl.actionDate,pl.expectStartTime,pl.expectEndTime
     </sql>

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO plan_action
        (
            <trim suffixOverrides=",">
                <if test="expectStartTime != null ">
                expectStartTime,
                </if>
                <if test="expectEndTiime != null ">
                expectEndTiime,
                </if>
                <if test="startTime != null ">
                startTime,
                </if>
                <if test="endTime != null ">
                endTime,
                </if>
                <if test="consumeTime != null ">
                consumeTime,
                </if>
                <if test="overTime != null ">
                overTime,
                </if>
                <if test="result != null ">
                result,
                </if>
                <if test="reason != null ">
                reason,
                </if>
                <if test="targetPlanId != null ">
                targetPlanId,
                </if>
                <if test="num != null">
                num,
                </if>
                <if test="actionDate != null">
                actionDate,
                </if>
            </trim>
        )
        VALUES (
            <trim suffixOverrides=",">
                <if test="expectStartTime != null ">
                #{expectStartTime},
                </if>
                <if test="expectEndTime != null ">
                #{expectEndTime},
                </if>
                <if test="startTime != null ">
                #{startTime},
                </if>
                <if test="endTime != null ">
                #{endTime},
                </if>
                <if test="consumeTime != null ">
                #{consumeTime},
                </if>
                <if test="overTime != null ">
                #{overTime},
                </if>
                <if test="result != null ">
                #{result},
                </if>
                <if test="reason != null ">
                #{reason},
                </if>
                <if test="targetPlanId != null ">
                #{targetPlanId},
                </if>
                <if test="num != null">
                #{num},
                </if>
                <if test="actionDate != null">
                #{actionDate},
                </if>
            </trim>
        )
    </insert>
    
    <insert id="batchAdd" useGeneratedKeys="true" keyProperty="id" parameterType="planAction">
        INSERT INTO plan_action
        (
                result,
                targetPlanId,
                expectStartTime,
                expectEndTime,
                actionDate,
                num
        )
        VALUES 
        <foreach collection="list" item="l" separator=",">
        (#{l.result},#{l.targetPlanId}, #{l.expectStartTime}, #{l.expectEndTime},#{l.actionDate},#{l.num})
        </foreach>
    </insert>
    
    <update id="batchUpdateResult">
        UPDATE plan_action 
            SET result = CASE id 
        <foreach collection="list" item="l">
            WHEN #{l.id} THEN #{l.result}
        </foreach>
        END
        WHERE id IN <foreach collection="list" item="l" open="(" close=")" separator=",">#{l.id}</foreach>
    </update>

    <update id="delete" >
        UPDATE plan_action set delflag = #{delflag}
         WHERE id = #{ id }
    </update>

    <update id="update" parameterType="planaction">
        UPDATE plan_action SET 
            <trim suffixOverrides=",">
                 <if test="expectStartTime != null ">
                expectStartTime = #{expectStartTime},
                </if>
                <if test="expectEndTime != null ">
                expectEndTime = #{expectEndTime},
                </if>
                <if test="startTime != null ">
                startTime = #{startTime},
                </if>
                <if test="endTime != null ">
                endTime = #{endTime},
                </if>
                <if test="consumeTime != null ">
                consumeTime = #{consumeTime},
                </if>
                <if test="overTime != null ">
                overTime = #{overTime},
                </if>
                <if test="result != null ">
                result = #{result},
                </if>
                <if test="reason != null ">
                reason = #{reason},
                </if>
                <if test="targetPlanId != null ">
                targetPlanId = #{targetPlanId}
                </if>
            </trim>
         WHERE id = #{id}
    </update>

    <update id="updateFull" parameterType="planaction">
        UPDATE plan_action SET 
            startTime = #{startTime},
            endTime = #{endTime},
            consumeTime = #{consumeTime},
            overTime = #{overTime},
            result = #{result},
            reason = #{reason},
            targetPlanId = #{targetPlanId}
         WHERE id = #{id}
    </update>

    <select id="getById" resultType="planAction" parameterType="planAction">
        SELECT 
        <include refid="base_column"/>
        FROM plan_action pl
        WHERE pl.id = #{id}
    </select>

    <select id="getList" resultType="planAction" parameterType="planAction">
        SELECT 
        <include refid="base_column"/>
        FROM plan_action pl
        WHERE 
    <trim prefixOverrides="AND">
        <if test="startTime != null ">
        AND pl.`startTime` = #{startTime}
        </if>
        <if test="endTime != null ">
        AND pl.`endTime` = #{endTime}
        </if>
        <if test="consumeTime != null ">
        AND pl.`consumeTime` = #{consumeTime}
        </if>
        <if test="overTime != null ">
        AND pl.`overTime` = #{overTime}
        </if>
        <if test="result != null ">
        AND pl.`result` = #{result}
        </if>
        <if test="reason != null ">
        AND pl.`reason` = #{reason}
        </if>
        <if test="targetPlanId != null ">
        AND pl.`targetPlanId` = #{targetPlanId}
        </if>
    </trim>
    </select>
    
    <select id="getActions" resultType="planActionForm" parameterType="planAction">
        SELECT 
        <include refid="base_column"/>, date_format( pl.actionDate, '%Y-%m' ) as dateStr
        FROM plan_action pl
        WHERE 
            pl.`targetPlanId` = #{targetPlanId}
        AND
    <trim prefixOverrides="AND">
        <if test="startTime != null ">
        <![CDATA[ 
         AND pl.`startTime` >= #{startTime}
	    ]]>
        </if>
        <if test="endTime != null ">
        <![CDATA[
        AND pl.`endTime` <= #{endTime}
        ]]>
        </if>
        <if test="consumeTime != null ">
        AND pl.`consumeTime` = #{consumeTime}
        </if>
        <if test="result != null ">
        AND pl.`result` = #{result}
        </if>
    </trim>
        ORDER BY pl.actionDate desc
    </select>
    
    <select id="getActionLastDay" resultType="planAction">
        SELECT
        <include refid="base_column"/>
        FROM plan_action pl
        WHERE
            pl.targetPlanId = IFNULL(#{targetPlanId},pl.targetPlanId)
        AND
            TO_DAYS(actionDate) = TO_DAYS(DATE_SUB(NOW(), INTERVAL 1 day))
        <if test="results != null">
        AND pl.result in (${results})
        </if>
    </select>

</mapper>