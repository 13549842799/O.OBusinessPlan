<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
    
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>
    
    <bean id="JedisConnectionFactory" 
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}" p:pool-config-ref="poolConfig" p:database="${redis.databaseIndex}"/>
          <!-- database指定连接的redis数据库  -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="JedisConnectionFactory" />
        <!-- 配置默认的序列化策略,非hash的value和hashValue都有效-->
         <property name="defaultSerializer" ref="genericJackson2JsonRedisSerializer" /> 
         <!-- Hash类型,用Jedis存储key为brandList,
                但是在redis-cli中查看key却是 "\xac\xed\x00\x05t\x00\tbrandList"-->
        <property name="keySerializer" ref="stringRedisSerializer" />
        <property name="hashKeySerializer" ref="stringRedisSerializer" /> 
    </bean>

    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="JedisConnectionFactory"/>
    </bean>   
    
    <!-- 配置key的序列化方式,使用String类型进行序列化 -->
     <bean id="stringRedisSerializer"
        class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <!-- 配置hashValue的序列化方式,使用Jackson serializer,将hashValue以json串的形式存储到redis中-->
    <bean id="genericJackson2JsonRedisSerializer"
        class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
    
    <!--redis token 管理器-->
   <bean id="tokenManager" class="com.oo.businessplan.common.redis.RedisTokenManager">
         <!-- 适应不同超时时间的需求 -->
         <property name="expired" value="1" />
         <property name="timeUnit" value="DAYS" />
         <property name="stringRedisTemplate" ref="stringRedisTemplate" />
         <property name="redisTemplate" ref="redisTemplate" />
    </bean>
    
    <bean id="redisMsgManager" class="com.oo.businessplan.common.redis.RedisMsgManager">
         <!-- 适应不同超时时间的需求 -->
         <property name="expired" value="10" />
         <property name="timeUnit" value="MINUTES" />
         <property name="stringRedisTemplate" ref="stringRedisTemplate" />
    </bean>
    
    
</beans>
